name: OSS Kubernetes Integration Test

on:
  repository_dispatch:
    types:
      - RunIntegrationTests

jobs:
  test:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        repository: armory-io/buildtool

    - name: Install Kubectl
      uses: azure/setup-kubectl@v1

    - name: Set Kubectl Context
      uses: azure/k8s-set-context@v1
      with:
        # https://console.cloud.google.com/kubernetes/clusters/details/us-central1-c/armory-kube/details?project=cloud-armory
        kubeconfig: ${{ secrets.ARMORY_KUBE_KUBECONFIG }}

    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      working-directory: testing/citest
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install

    - name: Write Cert & Key
      working-directory: testing/citest
      env:
        CERT: ${{ secrets.ARMORY_CLOUD_STAGING_CLIENT_CERT }}
        KEY: ${{ secrets.ARMORY_CLOUD_STAGING_CLIENT_CERT_KEY }}
      run: |
        echo -n ${CERT} | base64 --decode > client.crt
        echo -n ${KEY} | base64 --decode > client.key
        echo "CLIENT_CERTIFICATE_PATH=./client.crt" >> $GITHUB_ENV
        echo "CLIENT_CERTIFICATE_KEY_PATH=./client.key" >> $GITHUB_ENV

    - name: Run Kubernetes Smoke Test
      working-directory: testing/citest
      run: |
        pipenv run python tests/kube_v2_smoke_test.py \
          --native_base_url=https://spinnaker-staging-api.cloud.armory.io:8443/api/v1 \
          --spinnaker_kubernetes_v2_account=k8s-v2 \
          --test_user=anonymous \
          --test_namespace=demo

    - name: Run Kubernetes Artifact Test
      working-directory: testing/citest
      run: |
        pipenv run python tests/kube_v2_artifact_test.py \
          --native_base_url=https://spinnaker-staging-api.cloud.armory.io:8443/api/v1 \
          --spinnaker_kubernetes_v2_account=k8s-v2 \
          --test_user=anonymous \
          --test_namespace=demo
