name: Deploy Control Plane

on:
  push:
    branches:
      - master

jobs:
  deploy_control_plane:
    name: Deploy Control Plane
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Find root PR
        uses: jwalton/gh-find-current-pr@v1
        id: findPr

      - name: Get Name Image & Tag From Event Data
        if: success() && steps.findPr.outputs.number
        id: get_deploy_info
        run: |
          . .github/workflows/get_deploy_info_from_PR_body.sh '${{ steps.findPr.outputs.body }}'

      - name: Log Outputs
        run: |
          echo "Service to Change: ${{ steps.get_deploy_info.outputs.serviceName }}"
          echo "With Image: ${{ steps.get_deploy_info.outputs.image }}"
          echo "With Tag: ${{ steps.get_deploy_info.outputs.tag }}"

      - name: Trigger control plane CD
        uses: armory-io/spin-trigger-pipeline-action@master
        if: success() && steps.findPr.outputs.number
        id: trigger
        with:
          baseUrl: https://spinnaker-api.cloud.armory.io:8443/api/v1
          source: control-plane-cd
          serviceName: ${{ steps.get_deploy_info.outputs.serviceName }}
          image: ${{ steps.get_deploy_info.outputs.image }}
          tag: ${{ steps.get_deploy_info.outputs.tag }}
          crtFile: ${{ secrets.ARMORY_CLOUD_SPINNAKER_CLIENT_CERTIFICATE }}
          keyFile: ${{ secrets.ARMORY_CLOUD_SPINNAKER_CLIENT_PRIVATE_KEY }}
          passphrase: ${{ secrets.ARMORY_CLOUD_SPINNAKER_CLIENT_CERTIFICATE_PASSWORD }}
          isEncoded: true

      - name: Watch for success execution
        uses: armory-io/spin-wait-status-action@master
        if: success() && steps.findPr.outputs.number
        with:
          baseUrl: https://spinnaker-api.cloud.armory.io:8443/api/v1
          application: controlplanecd
          eventId: ${{ steps.trigger.outputs.eventId }}
          crtFile: ${{ secrets.STAGING_CLIENT_CERTIFICATE }}
          keyFile: ${{ secrets.STAGING_CLIENT_PRIVATE_KEY }}
          passphrase: ${{ secrets.ARMORY_CLOUD_SPINNAKER_CLIENT_CERTIFICATE_PASSWORD }}
          isEncoded: true
